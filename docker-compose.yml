version: '3'

volumes:
  mysql-data:

services:
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    ports:
#      - 9090:9090
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#    volumes:
#      - .\prometheus\prometheus.yml:/etc/prometheus/prometheus.yml:ro
#
#  grafana:
#    image: grafana/grafana
#    ports:
#      - "3000:3000"
#    container_name: grafana
#    volumes:
#    - .\grafana:/etc/grafana/provisioning/datasources/
#    depends_on:
#      - prometheus
#
#  app:
#    image: leonardomulticloud/go_app:latest
#    container_name: app
#    ports:
#    - 8181:8181


  #########################################
  # Postgres: The database used by Keycloak
  #########################################
  mysql_keycloak:
    image: mysql:5.7
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=keycloak
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - nubank

  keycloak:
    image: jboss/keycloak
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=mysql
      - DB_ADDR=mysql_keycloak
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
    ports:
      - 8080:8080
    depends_on:
      - mysql_keycloak
    networks:
      - nubank


  #######################################
  # Postgres: The database used by Kong
  #######################################
  pgsql_kong:
    container_name: pgsql_kong
    image: postgres:9.6
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    networks:
      - nubank
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5


  ########################################
  ## Kong database migration
  #######################################
  kong-migration:
    image: kong:latest
    container_name: kong-migration
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - nubank
    environment:
      KONG_PG_HOST: pgsql_kong
    links:
      - pgsql_kong
    depends_on:
      - pgsql_kong

  ########################################
  ## Kong: The API Gateway
  ########################################
  kong:
    image: kong:latest
    container_name: kong
    restart: always
    environment:
      KONG_PG_HOST: pgsql_kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - pgsql_kong
    networks:
      - nubank
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8001:8001"
      - "8000:8000"

  ########################################
  ## Konga database prepare
  ########################################
  konga-prepare:
    image: pantsel/konga:latest
    container_name: konga-prepare
    command: "-c prepare -a postgres -u postgresql://kong@pgsql_kong:5432/konga_db"
    restart: on-failure
    links:
      - pgsql_kong
    depends_on:
      - pgsql_kong
    networks:
      - nubank

  ########################################
  ## Konga: Kong GUI
  ########################################
  konga:
    image: pantsel/konga:latest
    container_name: konga
    restart: always
    environment:
      DB_ADAPTER: postgres
      DB_HOST: pgsql_kong
      DB_USER: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - pgsql_kong
    ports:
      - "1337:1337"
    networks:
      - nubank

networks:
  nubank: